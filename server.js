// server.js
console.log('--- –í–ï–†–°–Ü–Ø –°–ï–†–í–ï–†–ê –ó–ê–ü–£–©–ï–ù–ê ---');

import dotenv from 'dotenv';
dotenv.config();

console.log('JWT_SECRET from server.js (after dotenv.config()):', process.env.JWT_SECRET);

import express from 'express';
import mongoose from 'mongoose';
import morgan from 'morgan';
import path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';
import cors from 'cors'; // <--- –Ü–ú–ü–û–†–¢–£–Ñ–ú–û CORS MIDDLEWARE

// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –≤–∞—à—ñ –º–∞—Ä—à—Ä—É—Ç–∏
import authRoutes from './routes/authRoutes.js'; // –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —Ü–µ 'authRoutes.js'
import userRoutes from './routes/userRoutes.js';
import watchlistRoutes from './routes/watchlistRoutes.js';
import friendRoutes from './routes/friendRoutes.js';
import contentRoutes from './routes/contentRoutes.js'; // <--- –î–û–î–ê–ù–û: –Ü–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç—ñ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç—É

// –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è __dirname –¥–ª—è ES –º–æ–¥—É–ª—ñ–≤
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const app = express();
const PORT = process.env.PORT || 5000;

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
mongoose.connect(process.env.MONGODB_URI)
¬† ¬† .then(() => console.log('MongoDB Connected'))
¬† ¬† .catch(err => console.error('MongoDB connection error:', err));

// –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø MIDDLEWARE

// Morgan –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤
if (process.env.NODE_ENV === 'development') {
¬† ¬† app.use(morgan('dev'));
}

// --- –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø CORS (–í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ allowedHeaders) ---
// –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –¥–æ–∑–≤–æ–ª–µ–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª
// –í–∫–ª—é—á–∞—î–º–æ URL —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏ (http://localhost:5173)
// —Ç–∞ URL –±–µ–∫–µ–Ω–¥—É (http://localhost:5000), —è–∫—â–æ –≤—ñ–Ω —Ç–∞–∫–æ–∂ –º–æ–∂–µ –±—É—Ç–∏ –¥–∂–µ—Ä–µ–ª–æ–º –∑–∞–ø–∏—Ç—ñ–≤
// –ê –¢–ê–ö–û–ñ URL –§–†–û–ù–¢–ï–ù–î–£ –í –†–ï–ñ–ò–ú–Ü PROD
const allowedOrigins = [
¬† ¬† 'http://localhost:5173', // URL –≤–∞—à–æ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –ø—ñ–¥ —á–∞—Å —Ä–æ–∑—Ä–æ–±–∫–∏
¬† ¬† 'http://localhost:5000', // URL –≤–∞—à–æ–≥–æ –±–µ–∫–µ–Ω–¥—É (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
¬† ¬† process.env.CLIENT_URL_PROD, // URL –≤–∞—à–æ–≥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –≤ —Ä–µ–∂–∏–º—ñ production
¬† ¬† // –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ URL-–∏, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
];

// –§—ñ–ª—å—Ç—Ä—É—î–º–æ null/undefined –∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫—â–æ –∑–º—ñ–Ω–Ω–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
const filteredAllowedOrigins = allowedOrigins.filter(origin => origin);

console.log(`–°–µ—Ä–≤–µ—Ä –¥–æ–∑–≤–æ–ª—è—î –∑–∞–ø–∏—Ç–∏ –∑ –¥–∂–µ—Ä–µ–ª: ${filteredAllowedOrigins.join(', ')}`);

app.use(cors({
¬† ¬† origin: function (origin, callback) {
¬† ¬† ¬† ¬† // –î–æ–∑–≤–æ–ª—è—î–º–æ –∑–∞–ø–∏—Ç–∏ –±–µ–∑ 'Origin' –∑–∞–≥–æ–ª–æ–≤–∫–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑ Postman –∞–±–æ curl)
¬† ¬† ¬† ¬† // –ê–ë–û —è–∫—â–æ 'Origin' –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É —Å–ø–∏—Å–∫—É –¥–æ–∑–≤–æ–ª–µ–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª
¬† ¬† ¬† ¬† if (!origin || filteredAllowedOrigins.indexOf(origin) !== -1) {
¬† ¬† ¬† ¬† ¬† ¬† callback(null, true);
¬† ¬† ¬† ¬† } else {
¬† ¬† ¬† ¬† ¬† ¬† callback(new Error(`Not allowed by CORS - Origin: ${origin}`)); // –î–æ–¥–∞—î–º–æ Origin –¥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
¬† ¬† ¬† ¬† }
¬† ¬† },
¬† ¬† methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'], // –î–æ–∑–≤–æ–ª–µ–Ω—ñ HTTP –º–µ—Ç–æ–¥–∏
¬† ¬† // --- –Ø–í–ù–û –î–û–ó–í–û–õ–Ø–Ñ–ú–û –ù–ï–û–ë–•–Ü–î–ù–Ü –ó–ê–ì–û–õ–û–í–ö–ò (–≤–∫–ª—é—á–∞—é—á–∏ Authorization) ---
¬† ¬† allowedHeaders: ['Content-Type', 'Authorization'],
¬† ¬† // --- ---
¬† ¬† credentials: true, // –î–æ–∑–≤–æ–ª—è—î –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –∫—É–∫–∏ —Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
}));
// --- –ö–Ü–ù–ï–¶–¨ –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø CORS ---


// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥—É —Ç—ñ–ª–∞ –∑–∞–ø–∏—Ç—É
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—á–Ω–æ—ó –ø–∞–ø–∫–∏ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—å
app.use('/uploads', express.static(path.join(__dirname, 'uploads')));

// –ú–ê–†–®–†–£–¢–ò API
app.get('/', (req, res) => {
¬† ¬† res.send('ReelTrack API is running!');
});

app.use('/api/auth', authRoutes);
app.use('/api/users', userRoutes);
// –î–æ–¥–∞–π—Ç–µ —ñ–Ω—à—ñ –≤–∞—à—ñ –º–∞—Ä—à—Ä—É—Ç–∏ —Ç—É—Ç:
app.use('/api/watchlist', watchlistRoutes);
app.use('/api/friends', friendRoutes);
app.use('/api/content', contentRoutes); // <--- –î–û–î–ê–ù–û: –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –º–∞—Ä—à—Ä—É—Ç—ñ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç—É

// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ (—Ä–æ–∑–º—ñ—Å—Ç—ñ—Ç—å –ø—ñ—Å–ª—è –≤—Å—ñ—Ö –º–∞—Ä—à—Ä—É—Ç—ñ–≤)
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±—ñ–ª—å—à –∑–∞–≥–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫, —è–∫–∏–π –º–∏ —ñ–º–ø–æ—Ä—Ç—É–≤–∞–ª–∏
// import { notFound, errorHandler } from './middleware/errorMiddleware.js';
// –Ø–∫—â–æ –≤–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ –æ–∫—Ä–µ–º—ñ middleware –¥–ª—è –ø–æ–º–∏–ª–æ–∫, –ø–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤–æ–Ω–∏ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω—ñ
// app.use(notFound); // –Ø–∫—â–æ —É –≤–∞—Å —î middleware –¥–ª—è 404
// app.use(errorHandler); // –Ø–∫—â–æ —É –≤–∞—Å —î –∑–∞–≥–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫

// –ó–∞–ª–∏—à–∞—î–º–æ –≤–∞—à—É –ø–æ—Ç–æ—á–Ω—É –±–∞–∑–æ–≤—É –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫, —è–∫—â–æ —É –≤–∞—Å –Ω–µ–º–∞—î –æ–∫—Ä–µ–º–∏—Ö middleware
app.use((err, req, res, next) => {
¬† ¬† console.error(err.stack);
¬† ¬† res.status(err.statusCode || 500).json({
¬† ¬† ¬† ¬† message: err.message || '–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
¬† ¬† ¬† ¬† stack: process.env.NODE_ENV === 'production' ? 'ü•û' : err.stack
¬† ¬† });
});


// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
¬† ¬† console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT} —É —Ä–µ–∂–∏–º—ñ ${process.env.NODE_ENV}`);
¬† ¬† // –õ–æ–≥—É—î–º–æ –¥–æ–∑–≤–æ–ª–µ–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞
¬† ¬† console.log(`–°–µ—Ä–≤–µ—Ä –¥–æ–∑–≤–æ–ª—è—î –∑–∞–ø–∏—Ç–∏ –∑ –¥–∂–µ—Ä–µ–ª: ${filteredAllowedOrigins.join(', ')}`);
});